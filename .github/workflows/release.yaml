name: 'publish'

on:
  workflow_dispatch: {}
  #push:
  #  branches:
  #    - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install pnpm
        run: npm i -g pnpm

      - name: install frontend dependencies
        run: pnpm install # change this to npm, pnpm or bun depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  publish-android:
    runs-on: ubuntu-latest
    permissions:
        contents: write
    steps:
        - uses: actions/checkout@v4

        - uses: pnpm/action-setup@v4
          with:
              version: 8

        - name: Setup Java
          uses: actions/setup-java@v4
          with:
              distribution: 'zulu'
              java-version: '17'

        - name: Setup Android SDK
          uses: android-actions/setup-android@v3

        - name: Install NDK
          run: sdkmanager "ndk;27.0.11902837"

        - name: setup node
          uses: actions/setup-node@v4
          with:
              node-version: lts/*

        - name: install Rust stable
          uses: dtolnay/rust-toolchain@stable
          with:
              targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

        - name: install pnpm
          run: npm i -g pnpm

        - name: Install dependencies
          run: pnpm install

        - name: Build app bundle
          run: pnpm tauri android build -v
          env:
              NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837

        - name: Extract android signing key from env
          run: |
              echo "${{ secrets.ANDROID_RELEASE_KEYSTORE }}" > src-tauri/gen/android/release.jks.base64
              base64 -d src-tauri/gen/android/release.jks.base64 > src-tauri/gen/android/release.decrypted.jks

        - name: Sign APK
          run: |
              ${{ env.ANDROID_HOME }}/build-tools/34.0.0/apksigner sign --ks src-tauri/gen/android/release.decrypted.jks \
                --ks-key-alias ${{ secrets.ANDROID_RELEASE_KEY }} \
                --ks-pass pass:${{ secrets.ANDROID_RELEASE_PASSWORD }} \
                --key-pass pass:${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }} \
                --out src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk \
                src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk

        - name: Get Node project version
          id: package-version
          uses: martinbeentjes/npm-get-version-action@v1.3.1

        - name: Rename APK file
          run: |
              mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/unhurry-${{ steps.package-version.outputs.current-version}}.apk

        - name: Publish
          uses: softprops/action-gh-release@v1
          with:
              draft: true
              tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
              name: App v${{ steps.package-version.outputs.current-version}}
              tag_name: app-v${{ steps.package-version.outputs.current-version}}
              files: |
                  ./src-tauri/gen/android/app/build/outputs/apk/universal/release/unhurry-${{ steps.package-version.outputs.current-version}}.apk
